#include<string>
#include<iostream>
using namespace std;


//----------------------------------------------//
//一.成员函数
void memberfunctions()
{
	string s0("abcdef ghijk");
	//constructor构造函数
	string s1;
	string s2(s1);
	string s3(s1, 3, 5);
	string s4("abcdef");

	//赋值运算符operator=
	s2 = "abcdef";
	s2 = 'x';
	s2 = s1;
}
//-----------------------------------------------//
//二.迭代器iterator
void Iterator()
{
	string s0("abcdef ghijk");

	string::iterator  it;
	it= s0.begin();
	it = s0.end();
}
//-----------------------------------------------------//
//三.修饰符modifiers
void modifiers()
{
	string s0;
	//1.push_back()：
	s0.push_back('x');

	//2.运算符operator+=
	s0 += s0;
	s0 += 'x';
	s0 += "abcdef";

	//append():
	s0.append(s0);
	s0.append(5, 'x');
	s0.append(s0, 2, 4);//添加一个字符串的某一段子串

	//swap
	string s1(s0, 2, 8);
	//cout << s0 << endl;
	//cout << s1;
	s0.swap(s1);
	swap(s0, s1);

	//clear
	s0.clear();
	//c_str()
	s0 += s1.c_str();
	cout << s0;

	//resize()
	s0.resize(2);
	s0.resize(10, 'x');
	s0.resize(15);

	//reserve()
	s0.reserve(2);
	s0.reserve(20);

	
}
//-------------------------------------------------//
//四.访问
void access()
{
	//[]
	string s0("abcdef");
	cout << s0[1];
}
//-------------------------------------------------//
//五.其他
void A()
{
	//find()
	//返回 从pos位置开始 c在string1中第一次出现的位置
	string s0("adebcdefa");
	string s1(s0, 4, 3);

	size_t found1 = s0.find('a', 2);
	size_t found2 = s0.find("de", 4);


	size_t found3 = s0.find(s1,2);



	//insert()
	s1 = s0.insert(2, "abc");
	s1 = s0.insert(2, "abcdef", 3);
	s1 = s0.insert(2, 3, 'x');
	string::iterator it = s0.insert(s0.begin(),5, 'x');
	it = s0.insert(s0.end(), 'z');
	it = s0.insert(s0.end(), s1.begin(), s1.end());
}
//----------------------------------------------//
int main()
{
	modifiers();

	return 0;
}
