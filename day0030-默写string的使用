#include<iostream>
using namespace std;

int main()
{
	//构造函数
	string s0("abcdef g");
	string s1;
	string s2(s0);
	string s3("abc");
	//string s4(s0, 2, 3);


	//operator=
	s1 = s0;
	s1 = 'x';
	//s1 = "abcde";

	string::iterator it = s1.begin();
	it = s1.end();

	s1.push_back('x');

	s1 += 'x';
	s1 += s0;
	s1 += "bac";

	s2.clear();

	s1.swap(s0);
	swap(s1, s0);
	s1 += s0.c_str();

	cout << s1.size() << endl << s1.capacity()<<endl<<s1.empty()<<endl;
	s1.resize(1);
	s1.resize(10);
	s1.resize(10, 'x');
	s1.reserve(100);
	cout << s1.size() << endl << s1.capacity() << endl << s1.empty() << endl;



	int found = s1.find('x',0);
	//found = s1.find(s3, 0);
	//found = s1.find("abc", 0);

	//s1.insert(2,3,'x');
	//s1.insert(s1.end(), 3, 'x');
	//s1.insert(s1.end(), 'x');

	//s1.insert(2,"xxx");
	//s1.insert(2, "cccc", 3);
	//s1.insert(2, s0);
	//s1.insert(2, s0, 3);
	//s1.insert(s1.end(), s0.begin(), s0.end());

	s1.erase(s1.begin());
	s1.erase(s1.begin() + 3, s1.end() - 1);
	//s1.erase(2, 1);

	s1.append(s0);
	//s1.append(s0, 2, 7);
	s1.append(5, '.');
	return 0;
}
