1.原理：当向二叉搜索树中插入新结点后，如果能保证每个结点的左右子树高度之差的绝对值不超过1(需要对树中的结点进行调整)，即可降低树的高度，从而减少平均搜索长度。
2.性质：
- 它的左右子树都是AVL树
- 左右子树高度之差(简称平衡因子)的绝对值不超过1(-1/0/1)
- 如果一棵二叉搜索树是高度平衡的，它就是AVL树。如果它有n个结点，其高度可保持在 O(log_2 n)，搜索时间复杂度O(log_2 n)。

3.数据的插入
（1）按照搜索树规则插入
（2）更新插入的节点的祖先节点的平衡因子（这里采用右减左），
- 插入父亲的左边，平衡因子--
- 插入父亲的右边，平衡因子++

- 父亲平衡因子==0，父亲所在子树高度不变，不再继续往上更新，插入结束
- 父亲平衡因子==1 or -1 ，父亲所在子树高度改变，继续往上更新
- 父亲平衡因子==2 or -2 ，父亲所在子树已经不平衡了，需要旋转处理

4.失衡的调整：插入节点后，如果导致多个祖先节点失衡，只要调整距离插入节点最近的失衡节点


总结：
假如以pParent为根的子树不平衡，即pParent的平衡因子为2或者-2，分以下情况考虑
1.pParent的平衡因子为2，说明pParent的右子树高，设pParent的右子树的根为pSubR
当pSubR的平衡因子为1时，执行左单旋
当pSubR的平衡因子为-1时，执行右左双旋
2. pParent的平衡因子为-2，说明pParent的左子树高，设pParent的左子树的根为pSubL
当pSubL的平衡因子为-1是，执行右单旋
当pSubL的平衡因子为1时，执行左右双旋
