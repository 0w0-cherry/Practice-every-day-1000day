//指针的运算
struct Test
{
    int num;
    char* paName;
    short sDate;
    char cha[2];
    short sBa[4];
}*p=(struct Test*)0x100000;
//20字节
p+0x1;//+0x14
(unsigned long)p+0x1;//+1
(unsigned int*)p+0x1;//+4

//大小端问题
int a[4]={1,2,3,4};
int *ptr1=(int*)(&a+1);
int *ptr2=(int*)((int)a+1);
ptr1[-1];//4
*ptr2;//0x 2 00 00 00

*高难
char* c[]=["abcd","mefg","ghij","jklm"];
char** cp[]={c+3,c+2,c+1,c};;
char*** cpp=cp;
printf("%s\n",**++cpp);//ghij
printf("%s\n",*-- * ++cpp + 3);//d
printf("%s\n",*cpp[-2]+3);//m
printf("%s\n",cpp[-1][-1] + 1);//efg




int a[3][2]={(0,1),(2,3),(4,5)};
int* p=a[0];
p[0];//1

//指针-指针=指针之间的元素的个数
int a[5][5];
int(*p)[4];
p=a;
printf("%p,%d\n",&p[4][2]-&a[4][2],&p[4][2]-&a[4][2]);


数组名等于首元素地址
//int aa[2][5]={1,2,3,4,5,6,7,8,9,10};
int* ptr2=(int*)(*(aa+1));//此处 int*的转换没有意义


char* a[]={"work","at","alibaba"};
char** pa=a;
pa++;
printf("%s\n",*pa);//"at"


