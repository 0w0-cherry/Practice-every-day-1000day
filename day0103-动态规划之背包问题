//最后一块石头的重量II
https://leetcode.cn/problems/last-stone-weight-ii/
class Solution {
public:
    int lastStoneWeightII(vector<int>& stones) {
        int n=stones.size();
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum+=stones[i];
        }
        int aim=sum/2;
        vector<vector<int>> dp(n+1,vector<int>(aim+1));
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=aim;j++)
            {
                dp[i][j]=dp[i-1][j];
                if(j-stones[i-1]>=0)
                {
                    dp[i][j]=max(dp[i][j],dp[i-1][j-stones[i-1]]+stones[i-1]);
                }
            }
        }
        return sum-2*dp[n][aim];
    }
};


//最后一块石头的重量
https://leetcode.cn/problems/last-stone-weight/
class Solution {
public:
    int lastStoneWeight(vector<int>& stones) {
        int index=stones.size()-1;
        for(int i=0;i<stones.size()-1;i++)
        {
            sort(stones.begin(),stones.end());
            if(stones[index-1]==0) break;
            stones[index]-=stones[index-1];
            stones[index-1]=0;
        }
        return stones[index];
    }
};
