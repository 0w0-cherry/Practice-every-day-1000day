一.联合体（共用体）
1.联合体的声明
联合体由一个或多个成员构成，它们可以是不同的类型。
但是编译器只为最大的成员分配足够的内存空间
2.特点：所有成员共用一块内存空间。因此给联合体其中一个成员赋值，其他成员也会跟着改变
//节省空间的写法
struct gift_list
{
    int price;
    int item_type;//商品类型
    union
    {
        struct A
        {
             char title[20];//书名
             int pages;;//页数       
        }book;
        struct B
        {
            char design[30];//设计
            int sizes;//尺寸        
        }shirt;
        struct A a;//struct A的作用域在union中
;    }item;
};
二.枚举类型
1.为什么要使用枚举？（枚举的优点）
我们可以使用#define定义常量，那为什么要使用枚举？
枚举的优点：
（1）增加代码可读性和可维护性
（2）和#define定义的标识符比较，枚举有类型检查，更加严谨
（3）便于调试，预处理阶段会删除#define定义的符号
（4）使用方便，一次可以定义多个常量
（5）枚举常量是遵循作用域规则的，枚举声明在函数内，只能在函数内使用
2.枚举类型的使用
enum Sex
{
    //这些列出的值被称为枚举常量,默认从0开始
    MALE=1,//可在声明时赋初值
    FEMALE=10,
    SECRET
};
enum Sex s=MALE;
